from pydantic import BaseModel
from typing import Optional, List

# {
#   "_id": "Panel ID Generated by MongoDB",
#   "panel_letter": "A",
#   "school": "School ID",
#   "specialization": "Specialization ID",
#   "students": [
#     "Student ID 1",
#     "Student ID 2"
#   ],
#   "semesters": [
#     "Semester ID 1",
#     "Semester ID 2"
#   ],
#   "current_semester": "Semester ID"
# }


# {
#   "_id": "School ID Generated by MongoDB",
#   "name": "School Name",
#   "specializations": ["Specialization ID 1", "Specialization ID 2"]
# }


#   "_id": "Semester ID Generated by MongoDB",
#   "semester_number": 1,
#   "panel": "Panel ID",
#   "specialization": "Specialization ID",
#   "school": "School ID",
#   "start_date": "2021-08-01",
#   "end_date": "2021-12-31",
#   "subjects": [
#     "Subject ID 1",
#     "Subject ID 2"
#   ],
#   "teachers": [
#     "Teacher ID 1",
#     "Teacher ID 2"
#   ],
#   "teacher_subjects": {
#     "subject_id 1": "Teacher ID 1",
#     "subject_id 2": "Teacher ID 2"
#   }

# {
#     "_id": "Specialization ID Generated by MongoDB",
#     "name": "Specialization Name",
#     "panels": ["Panel ID 1", "Panel ID 2"],
# }

class PanelModel(BaseModel):
    panel_letter: str
    school: str
    specialization: Optional[str] = ""
    students: List[str]
    semesters: List[str]
    current_semester: str

    def set_id(self, _id):
        self._id = _id


class PanelID(BaseModel):
    panel_id: str

class SchoolModel(BaseModel):
    name: str
    specializations: Optional[List[str]] = []

    def set_id(self, _id):
        self._id = _id


class SemesterModel(BaseModel):
    semester_number: int
    panel: str
    specialization: str
    school: str
    start_date: str
    end_date: str
    subjects: Optional[List[str]] = []
    teachers: Optional[List[str]] = []
    teacher_subjects: Optional[dict] = {}

    def set_id(self, _id):
        self._id = _id


class SpecializationModel(BaseModel):
    name: str
    panels: Optional[List[str]] = []

    def set_id(self, _id):
        self._id = _id

class SpecializationResponseModel(BaseModel):
    specialization_id: str
    name: str
    panels: Optional[List[str]] = []